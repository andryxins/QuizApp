{"version":3,"sources":["webpack:///./tamplate/showResaltTemplate.hbs","webpack:///./tamplate/startTestTemplate.hbs","webpack:///./services/responceForCategoriesOnStart.js","webpack:///./services/responceForTest.js","webpack:///./components/showTestInterFace.js","webpack:///./components/testActions.js","webpack:///./components/testStartActions.js","webpack:///./tamplate/testInterFace.hbs"],"names":["Handlebars","module","exports","template","container","depth0","helpers","partials","data","helper","escapeExpression","correctAnswers","hooks","helperMissing","call","nullContext","alias1","alias2","alias4","id","name","stack1","each","trivia_categories","program","noop","fetch","responce","json","console","log","category","difficulty","type","url","value","results","showTestInterFace","containerNode","questions","Promise","res","insertAdjacentHTML","testInterFace","document","querySelector","addEventListener","e","preventDefault","questionsNodes","Array","from","target","elements","userAnswer","find","item","checked","length","setAttribute","correct_answer","Toastify","text","backgroundColor","duration","className","showToast","forEach","nextElementSibling","removeAttribute","setTimeout","testActions","userAnswers","quantityOfQuestions","currentQuestionIdx","initTest","responceForTest","testsData","testStart","getCorrectAnswersAndQuantity","this","push","map","testRun","showTestResalt","incorrect_answers","splice","Math","round","random","innerHTML","testResalt","reduce","acc","idx","quantityOfCorrectAnswers","showResaltTemplate","startTestActions","renderingStartPage","refs","responceForCategories","categories","startTestTemplate","markup","lambda","question"],"mappings":"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","file":"main.e7cfa375ce6554dc3335.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"show-resalt\\\">\\n    <h2 class=\\\"show-resalt__title\\\">Your Resalt :</h2>\\n    <p class=\\\"show-resalt__quantity-answers\\\">\"\n    + container.escapeExpression(((helper = (helper = helpers.correctAnswers || (depth0 != null ? depth0.correctAnswers : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"correctAnswers\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":45},\"end\":{\"line\":3,\"column\":63}}}) : helper)))\n    + \"/10</p>\\n    <button class=\\\"show-resalt-btn page-btn\\\">Start Again!</button>\\n</div>\";\n},\"useData\":true});","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression;\n\n  return \"        <option value=\\\"\"\n    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"id\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":23},\"end\":{\"line\":4,\"column\":29}}}) : helper)))\n    + \"\\\">\"\n    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"name\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":31},\"end\":{\"line\":4,\"column\":39}}}) : helper)))\n    + \"</option>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<form method=\\\"get\\\" id=\\\"searchQuestions\\\" class=\\\"search-form\\\">\\n    <select class=\\\"serch-form__category\\\" name=\\\"category\\\">\\n\"\n    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.trivia_categories : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":8},\"end\":{\"line\":5,\"column\":17}}})) != null ? stack1 : \"\")\n    + \"\\n    </select>\\n    <select name=\\\"difficulty\\\" class=\\\"serch-form__difficulty\\\">\\n        <option value=\\\"\\\">all difficulty</option>\\n        <option value=\\\"easy\\\">easy</option>\\n        <option value=\\\"medium\\\">normal</option>\\n        <option value=\\\"hard\\\">hard</option>\\n    </select>\\n    <select name=\\\"type\\\" class=\\\"serch-form__type\\\">\\n        <option value=\\\"\\\">any type</option>\\n        <option value=\\\"multiple\\\">multiple</option>\\n        <option value=\\\"boolean\\\">true/false</option>\\n    </select>\\n    <button type=\\\"submit\\\" class=\\\"serch-form__submit page-btn\\\">start!</button>\\n</form>\";\n},\"useData\":true});","export default async () => {\n  try {\n    const responce = await fetch('https://opentdb.com/api_category.php');\n    const data = await responce.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","export default async ({ category, difficulty, type }) => {\n  try {\n    const url = `https://opentdb.com/api.php?amount=10&category=${category.value}&difficulty=${difficulty.value}&type=${type.value}`;\n    const responce = await fetch(url);\n    const data = await responce.json();\n    return data.results;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import testInterFace from '../tamplate/testInterFace.hbs';\nimport Toastify from 'toastify-js';\n\nexport const showTestInterFace = async (containerNode, questions) =>\n  new Promise(res => {\n    // inserting markUp with questions and answers to container\n    containerNode.insertAdjacentHTML('beforeend', testInterFace(questions));\n\n    // adding eventListner, all logic was writen in, need to refactor\n    document.querySelector('.currentQuestion').addEventListener('submit', e => {\n      e.preventDefault();\n\n      const questionsNodes = Array.from(e.target.elements); // getting all questions\n      const userAnswer = questionsNodes.find(item => item.checked); // finding user question\n\n      if (!userAnswer) {\n        // if user didnt choose any answer\n        Toastify({\n          text: 'You should choose any answer!!',\n          backgroundColor: '#f64c72',\n          duration: 2000,\n          className: 'info',\n        }).showToast();\n        return;\n      }\n      // if any input checked and submited, button turning to disabled\n      questionsNodes[questionsNodes.length - 1].setAttribute(\n        'disabled',\n        'true',\n      );\n      // checking true or false\n      if (userAnswer.value === questions.correct_answer) {\n        Toastify({\n          text: 'Excellent, you give correct answer!',\n          backgroundColor: '#91e842',\n          duration: 2000,\n          className: 'info',\n        }).showToast();\n      } else {\n        Toastify({\n          text: 'You were wrong(',\n          backgroundColor: '#f64c72',\n          duration: 2000,\n          className: 'info',\n        }).showToast();\n      }\n      // if answer is incorrect - showing rigth answer\n      questionsNodes.forEach(item => {\n        if (item.value === questions.correct_answer) {\n          item.nextElementSibling.removeAttribute('style');\n          item.nextElementSibling.setAttribute(\n            'style',\n            'background-color: #91e842; border: 3px solid #91e842;',\n          );\n        }\n      });\n      // after 2 seconds switching to the next question\n      setTimeout(() => res(userAnswer), 2000);\n    });\n  });\n","import responceForTest from '../services/responceForTest';\nimport showResaltTemplate from '../tamplate/showResaltTemplate.hbs';\nimport { startTestActions } from '../components/testStartActions';\nimport Toastify from 'toastify-js';\nimport { showTestInterFace } from './showTestInterFace';\n\nconst testActions = {\n  correctAnswers: [],\n  userAnswers: [],\n  quantityOfQuestions: 0,\n  currentQuestionIdx: 0,\n  container: document.querySelector('.container'),\n  initTest() {\n    // get questions form Trivia, if no questions - showing notification\n    const form = document.querySelector('#searchQuestions');\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const testsData = await responceForTest(e.target.elements);\n      if (!testsData.length) {\n        Toastify({\n          text: \"Sory, we couldn't find anything\",\n          backgroundColor: '#f64c72',\n          duration: 2000,\n          className: 'info',\n        }).showToast();\n        return;\n      }\n      // if all good - test start\n      testActions.testStart(testsData);\n    });\n  },\n  getCorrectAnswersAndQuantity(questions) {\n    this.correctAnswers.push(...questions.map(item => item.correct_answer));\n    this.quantityOfQuestions += questions.length;\n  },\n  testStart(questions) {\n    // test start\n\n    // getting corect answers and quantity of questions\n    this.getCorrectAnswersAndQuantity(questions);\n\n    this.testRun(questions);\n  },\n  async testRun(questions) {\n    /*\n     * Asking questions reqursivly, on each iteration, at start, checking number of question\n     * If it is 10/10 we break reqursion and showing test result\n     */\n\n    if (this.quantityOfQuestions === this.currentQuestionIdx) {\n      this.showTestResalt();\n      this.correctAnswers = [];\n      this.userAnswers = [];\n      this.quantityOfQuestions = 0;\n      this.currentQuestionIdx = 0;\n      return;\n    }\n\n    // randomizing order of questions, and putting corret answer to incorect answers\n\n    questions[this.currentQuestionIdx].incorrect_answers.splice(\n      Math.round(\n        Math.random() *\n          questions[this.currentQuestionIdx].incorrect_answers.length,\n      ),\n      0,\n      questions[this.currentQuestionIdx].correct_answer,\n    );\n\n    // start interface\n    this.container.innerHTML = '';\n    const userAnswer = await showTestInterFace(\n      this.container,\n      questions[this.currentQuestionIdx],\n    );\n    // after each iteration, function return DOM Node with user answer\n\n    this.userAnswers.push(userAnswer.value); // pushing to all answers\n    this.currentQuestionIdx += 1; // increasing index of current question\n    this.testRun(questions); // and starting functions again\n  },\n  testResalt() {\n    // getting sum of correct answers\n    return this.userAnswers.reduce((acc, item, idx) => {\n      item === this.correctAnswers[idx] && acc++;\n      return acc;\n    }, 0);\n  },\n  showTestResalt() {\n    // showing results and asking to start again\n    const quantityOfCorrectAnswers = this.testResalt();\n    this.container.innerHTML = '';\n    this.container.insertAdjacentHTML(\n      'beforeend',\n      showResaltTemplate({ correctAnswers: quantityOfCorrectAnswers }),\n    );\n    this.container\n      .querySelector('.show-resalt-btn')\n      .addEventListener('click', e => startTestActions.renderingStartPage());\n  },\n};\n\nexport { testActions };\n","import startTestTemplate from '../tamplate/startTestTemplate.hbs';\nimport responceForCategories from '../services/responceForCategoriesOnStart';\nimport { testActions } from './testActions';\n\n//------------------- START ---------------\n\n/*\n * On init making request to Trivia and getting categories for test\n * After rendering form with take options that was selected and starting test\n */\n\nconst refs = {\n  container: document.querySelector('.container'),\n};\n\nconst startTestActions = {\n  async renderingStartPage() {\n    const categories = await responceForCategories();\n    const markup = await startTestTemplate(categories);\n    refs.container.innerHTML = '';\n    refs.container.insertAdjacentHTML('beforeend', markup);\n    testActions.initTest();\n  },\n};\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  startTestActions.renderingStartPage();\n});\n\nexport { startTestActions };\n","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"    <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\" id=\\\"\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\" class=\\\"form__check-box answear-js\\\">\\n    <label for=\\\"\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\" class=\\\"form__label\\\">\"\n    + alias2(alias1(depth0, depth0))\n    + \"</label>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});\n\n  return \"<div class=\\\"test-interface\\\">\\n  <h2 class=\\\"test-interface__title\\\">\"\n    + container.escapeExpression(((helper = (helper = helpers.question || (depth0 != null ? depth0.question : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(alias1,{\"name\":\"question\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":36},\"end\":{\"line\":2,\"column\":48}}}) : helper)))\n    + \"</h2>\\n  <form class=\\\"currentQuestion test-interface__form\\\">\\n\\n\"\n    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.incorrect_answers : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":8,\"column\":13}}})) != null ? stack1 : \"\")\n    + \"\\n\\n    <button type=\\\"submit\\\" class=\\\"nextQuestionBtn-js page-btn page-btn--next-question\\\">Next</button>\\n\\n  </form>\\n</div>\\n\";\n},\"useData\":true});"],"sourceRoot":""}